一般我们在写代码的时候常常会碰到宏define中包含if语句，如下：

定义如下宏，并使用与main函数中的场景：

#define ABC(x) \
if(0 == x)          \
{                        \
        func(...)      \
}

main()
{
        if(a>b)
                ABC(x);
        else
                ...;
}
==============================================================================================
解答：
（1）：
代码预处理阶段会对宏进行替换，上述场景替换以后如下：

main()
{
        if(a>b)
                if(0 == x)
                {
                        func(...)
                };
        else
                ...;
}

会发现代码逻辑出现了问题：if-else 配对出错，不再是原有配对逻辑，编译报错

（2）：
这个时候我们想了一种办法解决这个问题，就是我们在宏里面加上大括号，保证代码整体性。
如下：
#define ABC(x)        \
{                               \
        if(0 == x)         \
        {                       \
                func(...)    \
        }                      \
}

main()
{
        if(a>b)
                ABC(x);
        else
                ...;
}

那么替换以后如下：

main()
{
        if(a>b)
        { 
                if(0 == x) 
                { 
                        func(...) 
                } 
        };    //<---替换以后，按照语法，此处多了一个分号
        else
                ...;
}

发现代码又出了一个问题：外层if的大括号后面又多了一个分号，这样编译又会报错，语法错误
所以，我们到底应该怎么处理这个问题呢？

（3）：
这个时候，我们写代码的时候，如果宏里面有if语句，为了保证模块的整体性，以及避免代码宏替换后语法出现的语法问题，我们使用do-while(0)将代码括起来，如下：
#define ABC(x)           \
do{                              \
        if(0 == x)            \
        {                          \
                func(...)       \
        }                         \
}while(0);

那么替换以后，如下：

main()
{
        if(a>b)
                do{ 
                        if(0 == x) 
                        { 
                                func(...) 
                        } 
                }while(0);
        else
                ...;
}

可以看到：
1、代码不会再影响到原有的if-else配对了，
2、也不会多了个分号，导出出现语法报错的问题了。


===========================================================================================
另外：
其实上面的问题，还涉及一个代码风格的问题：
为了避免上述代码报错的问题，如果我们每次if-else的大括号都写全，哪怕括号中只有一行！上述问题也可以得到有效避免。
例如上述问题，我们的if-else如果大括号写全了，那么替换以后如下

main()
{
        if(a>b)
        { 
                if(0 == x) 
                { 
                        func(...) 
                };
        }
        else
        {
                        ...;
        }
}

可以看到代码就不再有问题了，所以其实最重要的还是我们的代码风格要好，该有的大括号一定别偷懒！
