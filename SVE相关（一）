编译命令（用gcc8.3版本）：
1）由.cpp文件编译成.s文件：aarch64-linux-gnu-gcc -S test.cpp -o test.s -O3 -march=armv8.2-a+sve
PS：是否要加-D__ARM_FEATURE_SVE选项？
2）由.s文件编译成.so文件： aarch64-linux-gnu-gcc -shared test.s -o libtest.so
3) 链接该.so，生成可执行文件test：g++ main.cpp -L/so_file_path -ltest -o test

大部分ARM机器还不支持SVE，要安装仿真环境
https://developer.arm.com/tools-and-software/server-and-hpc/compile/arm-instruction-emulator
这个软件不能装在x86_64机器上

相应的还要安装qemu：
https://www.qemu.org/

为什么arm要设计sve，sve里最基本的寄存器包括z，predicate, ffr等
https://www.linleygroup.com/mpr/article.php?id=11753

对SIMD最基本的介绍：
https://zhuanlan.zhihu.com/p/55327037

除了用gcc8.3版本进行编译，也可以使用armclang，命令格式：
armclang --target=aarch64-arm-none-eabi -ffp-mode=fast -mno-unaligned-access -O3 -march=armv8.2-a+sve test.cpp -o test
armclang需要有licence授权

用armclang编译文件时，如果文件中用到了auto等c++11的特性，那么被编译文件不能为.c后缀，必须是.cpp才行，且编译命令中要加上--std=c++11


https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/building-an-armv8-linux-hello-world-with-arm-compiler-6

ARM Compiler 6 main focus has always been bare-metal applications running on ARM processors.

对标opencv时，调用opencv库文件生成真值，可链接以下几个.so
libopencv_highgui3.so
libopencv_imgproc3.so
libopencv_core3.so
